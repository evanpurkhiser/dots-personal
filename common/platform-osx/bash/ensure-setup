#!/usr/bin/env bash

function _macos_ensure_setup() {
	local setup_missing=0

	# Brew not installed
	if ! hash brew 2>/dev/null; then
		setup_missing=1

		if confirm_prompt "Install homebrew?"; then
			bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		fi

		if confirm_prompt "Run brew bundle?"; then
			brew bundle --file "$XDG_CONFIG_HOME/macos/Brewfile"
		fi
	fi

	# dotfile source is not a git repo
	if [ ! -d "$HOME/.local/etc/.git" ] && hash git 2>/dev/null; then
		setup_missing=1

		if confirm_prompt "Dotfiles source is not a git repo, clone it?"; then
			rm -rf "$HOME/.local/etc"
			git clone me:dots-personal "$HOME/.local/etc"
		fi
	fi

	# Ensure macos.sh has been run
	if [ ! -f "$XDG_DATA_HOME/macos-setup" ]; then
		setup_missing=1

		if confirm_prompt "Run macos.sh setup?"; then
			bash "$XDG_CONFIG_HOME/macos/macos.sh"
			touch "$XDG_DATA_HOME/macos-setup"
		fi
	fi

	if [ $setup_missing == 1 ]; then
		echo "Not loading bashrc, re-exec bash once all config is complete"
	fi

	# Link safe (ish) GNU coreutils into the path
	if [ ! -d "$HOME/.local/lib/gnu-override" ] && hash brew 2>/dev/null; then
		local GNU_OVERRIDE_DIR="$HOME/.local/lib/gnu-override/bin"
		local COREUTILS_BIN="$(brew --prefix coreutils)/bin"
		mkdir -p "$GNU_OVERRIDE_DIR"

		# GNU utils to use
		ln -fs "$COREUTILS_BIN/gls" "$GNU_OVERRIDE_DIR/ls"
	fi

	return $setup_missing
}

_macos_ensure_setup
